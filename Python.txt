Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6

파이썬은 모든 것이 객체이다.

캡슐화
데이터와 알고리즘을 하나로 묶어 공용 인터페이스만 제공하고 세부사항을 감추는 것.
캡슐화의 유 무는 개발자의 선택 
ex) 개발자가 객체의 접근방식을 제어하는 것 (pyclass.ex0818.py)
ex) self.__name = name
	 self.__age = age
	
상속
부모 클래스의 메소드를 그대로 이어 받아 사용하려면 자신의
메소드 이름 앞부분에 super().을 붙이고 매개변수에서는 self를 빼고 사용

인스턴스를 속성으로 사용하기
큰 클래스의 일부분을 잘라내 별도의 클래스로 만들어 사용한다.

다형성(Pylymorphism)
같은 모양의 코드가 다른 동작을 하는 것
파이썬은 동적인 방식의 다형성
자바는 정적인 방식의 다형성

클래스를 정의할때 class ClassName:과 class ClassName(object):는 동일하다.

__new__() 메소드는 객체가 생성될 때 자동으로 호출된다.

__init__()는 그 다음

__str__() 메소드는 객체의 클래스 이름과 객체의 메모리 주소로
구성된 객체에 대한 설명을 문자열로 반환한다.
