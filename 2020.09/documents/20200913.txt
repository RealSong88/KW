Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6

===========================오후1=========================== 
애플리케이션설계

공통 모듈 설계
모듈 - 전제 프로그램의 기능 중 특정 기능을 처리할 수 있는 실행 코드를 의미하며, 자체적으로 컴파일 가능하고 다른 프로그램에서 재사용이 가능하다.

전체 시스템 차원과 단위 시스템 차원의 공통부분을 식별한다.
- 재사용성 확보와 중복 개발 회피를 위해서
유스케이스 다이어그램을 검토하여 식별된 기능이 공통 기능으로 적용가능한지 분석한다.
공통 기능에 대한 프로그램 설계서를 작성한다.

공통 모듈의 필요성과 공통부분 식별 방법에 대해 설명한다.
36p 문제확인

아키텍쳐를 고려한 타 시스템 연동 설계
시스템연동의 개념
- 서버와 네트워크를 활용하는 자동화 체계 등에서 동일한 기능을 수행하지 않는 단위 시스템 간에 접속을 통하여 기능을 수행하는 것
데이터 연동
- 데이터베이스를 공유하여 타 시세틈과 연계하는 방법. 다른 연동 방식에 비해 자원 이용과 구축 시간을 절약할 수 있다.
인터페이스 연동
- 서로 독립적인 시스템의 상호 작용을 우ㅟ한 접속 경계나 규칙을 의미한다
웹서비스 연동
- 네트워크상에서 이기종 시스템 간에 표준화된 XML 메시지 및 여러 기술을 이용하여 시스템 간에 연동할 수 있는 기술

웹서버 - 웹브라우저의 요청을 받아 html파일이나 이미지, 자바스크립트의 정적인 콘텐츠를 제공하며 대표적인 웹서버로 아파치가 있다.
웹애플리케이션서버(WAS, Web Application Server) - 서버단(Server Level)에서 애플리케이션이 동작할 수 있는 호나경을 제공, 안정적인 트랙잭션 처리 및 관리, 다른 이기종 시스템간의 애플리케이션 연동을 지원.
웹서버와의 가장 큰 차이는 동적 서버 콘텐츠를 수행할 수 있다.

웹서버와 와스서버의 일반적인 구성
사용자가 웹브라우저를 통해 요청하는 경우 정적 데이터(이미지, 자바스크립트 등)을 웹 서버가 처리하고, 동적 콘텐츠(DB 접속, 외부 시스템 연동 등)의 경우 와ㅅ로 서비스를 요청함으로써 서버 자원을 효율적으로 처리할 수 있도록 구성한다.

가용성 향상을 위한 이중화
-액티브-액티브(Active-Active) 방식
—- 평상시에도 모든 서버가 서비스를 제공하다, 한 서버에 장애 발생하는 경우 다른 서버를 통해 서비스를 연속적으로 제공
-액티브-스탠바이(Active-StandBy)방식
—- 평상시에는 한쪽 서버에서 서비스를 제공하고, 장애가 발생하는 경우 다른 서버로 서비스를 이관하여 연속적인 서비스를 제공



화면설계



===========================오후2===========================

Linux 
$ dig [[+trace]] reasong88.ga ===  여러 서버를 거쳐 최종 ip 를 출력

root DNS Server === 세계 여러 곳에 있다. 이 서버가 에러가 발생하면 컴퓨터끼리 ip로 접속은 가능하나 도메인으로 접속할 수 없다.


===========================오후3===========================
