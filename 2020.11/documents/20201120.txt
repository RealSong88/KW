Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-11-20T09:42:16+09:00

===========================오전1===========================

Python

# 회의실 배정(그리드)
### 한 개의 회의실이 있는데 이를 사용하고자 하는 n개의 회의들에 대하여 회의실 사용표를 만들려고 한다. 
### 각 회의에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹지지않게 하면서 회의실을 사용할 수 있는 최대수의 회의를 찾아라, 단, 회의는 한번 시작하면 중간에 중단 될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.

#### 입력 설명 <br> 첫째 줄에 회의의 수 n(1<=n<=100,000)이 주어진다. 둘째 줄부터 n+1 줄까지 각회의의 정보가 주어지는데



#### 입력 예제 1
## 5
- 1 4
- 2 3
- 3 5
- 4 6
- 5 7

### 출력 예제 1
## 3

##### 예제 설명
###### (2, 3), (3, 5), (5, 7)이 회의실을 이용할 수 있다.

*args처럼 매개변수 이름 앞에 *을 붙이면 입력값을 전부 모아서 튜플로 만들어 주기 때문




===========================오전2===========================

### Cafe 스토어 보드 만들기 좌측정렬 우측정렬 활용
def cafe_store_board2(Store_name, *Messages, **cafe_tag):
	"""
	Store_name : 카페이름
	Message : 오늘 사인보드에 알릴 사항
	fruit_tag : 메뉴구성 및 가격표
	"""
    
	print("*"*6, Store_name, "******\n")
	for message in Messages:
		print(message)
	print("\n")
    
	for menu, tag in cafe_tag.items():
		__calib = 40 - len(menu)*2 - len(str(tag)) # menu가 한글이여서 2를 곱한다.__
		print('{}'.format(menu),'.'*calib, "{}".format(tag))

===========================오전3===========================

Java

wrapper클래스
	- 기본형(primitive type)을 클래스로 정의한 것. 기본형 값도 객체로 다뤄져야 할 때가 있다.
	
	- 내부적으로 기본형(primitive type)변수를 가지고 있다.
	
	- 값을 비교하도록 equals()가 오버라이딩되어 있다.

Calendar
	- java.util.Calendar
		추상 클래스이므로 getInstance()를 통해 구현된 객체를 얻어야한다.
	주요 메서드
	- get() 으로 날짜와 시간필드 가져오기
	
	- set() 으로 날짜와 시간 지정하기
	
	- clear()와 clear(int field)로 Calendar 객체초기화 하기
		= clear()는 Calendar객체의 모든 필드를 초기화
	
	달력 만들어보기 

형식화
	DecimalFormat-숫자의 형식화
	- 숫자를 다양한 형식(패턴)으로 출력할 수 있게 해준다.
	
milisecond / 1000
초 /60 
 분 / 60
  시간 / 24
   일 / 30
