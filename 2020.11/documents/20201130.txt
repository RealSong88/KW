Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-11-30T11:06:39+09:00

===========================오전1===========================




===========================오전2===========================

Java

Thread
쓰레드의 실행제어 메서드
	- void suspend() : 쓰레드를 일시정지 시킨다.
	- vold resume() : suspend()에 의해 일시정지된 쓰레드를 실행대기상태로 만듬
	- void stop () : 쓰레드를 즉시 종료시킨다.

	- yield() :
	- join() : 지정된시간동안 특정 쓰레드가 작업하는 것을 기다린다.

쓰레드의 동기화 - synchronized
	- 한번에 하나의 쓰레드만 객체에 접근할 수 있도록 객체에 락(lock)을 걸어서 데이터의 일관성을 유지하는 것.
	- 동기화의 효율을 높이기 위해 wait(), notify()를 사용
	- Object클래스에 정의되어 있으며, 동기화 블록 내에서만 사용할 수 있다.
	
		wait() - 객체의 lock을 풀고 쓰레드를 해당 객체의 waiting pool에 넣는다.
		notify() - waiting pool 에서 대기중인 쓰레드 중의 하나를 깨운다.
		notifyAll() - waiting pool 에서 대기중인 모든 쓰레들 깨운다.


===========================오후1=========================== 

람다식(Lambda Expression)이란?
	- 함수(메서드)를 간단한 '식(Expression)' 으로 표현하는 방법
		int max(int a, int b) {
			return a > b ? a : b;
			}
			=======================>
		(a, b) -> a > b ? a : b
		
	- 익명 함수(이름이 없는 함수, anonymous function)
	
람다식 작성하기
	- 메서드의 이름과 반환타입을 제거하고 '->' 를 블록{} 앞에 추가한다.

