Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-11-18T09:50:10+09:00

===========================오전1===========================

python


자릿수의 합
N개의 자연수가 입력되면 각 자연수의 자릿수의 합을 구하고, 그합이 최대인 자연수를 출력하는 프로그램을 작성하세요. 각 자연수의 자릿수의 합을 구하는 함수를 def digit_sum(x)를 꼭 작성해서 프로그래밍 하세요
readline 2번

입력설명 첫 줄에 자연수 개수 N(3<=N<=100)이 주어지고, 그 다음 줄에 N개의 자연수가 주어진다. 각 자연수의 크기는 10,000,000을 넘지 않는다

출력설명 자릿수의 합이 최대인 자연수를 출력한다

입력 예제 1
입력 1>

97 -- 3
-- 125 15232 97
출력 1>- 97 입력 2>
-- 7
-- 137 460 603 40 521 128 125

출력 2> -> 137, 128

===========================오전2===========================

Java
Inner class(내부 클래스)
	- 클래스 안에 선언된 클래스
	- 특정 클래스 내에서만 주로 사용되는 클래스를 내부 클래스로 선언

내부 클래스의 종류
	1. 내부클래스의 종류는 변수의 선언위치에 따른 종류와 동일
	2. __유효범위와 성질도 변수와 유사__
		- 인스턴스 클래스(instance class)
		- 스태틱 클래스(static class)
		- 지역 클래스(local class)
		- 익명 클래스(anonymous class)

내부 클래스의 제어자(modifier)와 접근성
	- 내부 클래스의 접근제어자는 변수에 사용할 수 있는 접근제어자와 동일하다.
	- __static 클래스만 static멤버__를 정의할 수 있다.


===========================오후1=========================== 
익명 클래스(anonymous class)
	- 이름이 없는 일회용 클래스. 선언과 생성을 동시에. 하나의 객체만 생성가능
	- 많이 쓰이지 않음
	
예외처리 (exception handling)
	프로그램 오류
		- 컴파일 에러(compile-time error)와 런타임 에러(runtime error)
		   * 컴파일 에러 - 컴파일할 때 발생하는 에러(문법에러)
			* __런타임 에러__ - 실행할 때 발생하는 에러(index(out of range), type miss, divide zero, out of memory, overflow, infinite looping
		- Java의 런타임 에러 - error와 exception
			에러(error) - 프로그램 코드에 의해서 수습될 수 없는 심각한 오류
			예외(exception) - 프로그램 코드에 의해서 수습될 수 있는 다소 미약한 오류
			
	예외처리의 정의와 목적
		- 에러(error)는 어쩔 수 없지만, 예외(exception)는 처리해야 한다. 
 
	예외처리는 한줄이여도 {}는 반드시 포함시켜야한다.
	__try-catch문은 최대한 간결하게 짠다.(catch문에서 error가 발생하지 않게끔 소스를 짠다.__
	
	예외의 발생과 catch블럭
	- try블럭에서 예외가 발생하면, 발생한 예외를 처리할 catch 블럭을 찾는다.
	- 일치하는 catch 블럭이 없으면 예외는 처리되지 않는다.
	- __예외의 최고 조상인 Exception을 처리하는 catch 블럭은 모든 종류의 예외를 처리할 수  있다.(반드시 마지막 catch 블럭이어야한다.)__
	- 발생한 예외 객체를 catch 블럭의 참조변수로 접근할 수 있다.
		printStackTrace() - 예외발생 당시 호출스택(call stack)에 있었던 메서드의 정보와 예외 메시지를 화면에 출력
		getMessage() - 발생한 예외클래스의 인스턴스에 저장된 메시지를 얻을 수 있다.
		
	예외 발생시키기
	- 연산자 new를 이용해서 발생시키려는 예외 클래스의 객체를 만든다
		Exception e = new Exception("고의로 발생시켰음");
	- 키워드 throw를 이용해서 예외를 발생시킨다.
		throw e;
		
	메서드에 예외 선언하기
		- 예외를 처리하는 또 다른 방법
		- 사실은 예외를 처리하는 것이 아닌, 호출한 메서드로 전달해주는 것
		- 호출한 메서드에서 예외처리를 해야만 할 때 사용

