===========================오전1===========================
프로그램? 프로세스?
프로그램 - OS위에 설치된 것
프로세스 - 프로그램이 실행되고있는 상태(CPU와 메모리에 할당된 상태)

NCS

HTTP 프로토콜은 무엇인가? ==== 정보수집해서 문서화
구글문서에 작성해서 공유



===========================오전2===========================
Python

문자열 포맷팅 활용  (Day4.py)
활용해서 구구단 텍스트파일 만들기 (e:\RealSong\Documents\gugudan.txt)

===========================오전3===========================

문자열 포맷 정렬과 공백

>>> "%10s" % "hi"
'        hi'

>>> "%-10sjane." % 'hi'
'hi        jane.'

format 함수 사용한 포매팅
{index}

숫자에서
>>> "I eat {0} apples".format(3)
'I eat 3 apples'

문자열에서
>>> "I eat {0} apples".format("five")
'I eat five apples'

2개 이상의 값 넣기
>>> number = 10
>>> day = "three"
>>> "I ate {0} apples. so I was sick for {1} days.".format(number, day)
'I ate 10 apples. so I was sick for three days.'

이름으로 넣기 (긴 문장에서 가독성 좋음)
>>> "I ate {number} apples. so I was sick for {day} days.".format(number=10, day=3)
'I ate 10 apples. so I was sick for 3 days.'

왼쪽 정렬				오른쪽정렬 {0:>10} 	가운데 정렬 {0:^10}
>>> "{0:<10}".format("hi")
'hi        '

공백 채우기
>>> "{0:=^10}".format("hi")
'====hi===='
>>> "{0:!<10}".format("hi")
'hi!!!!!!!!'

f 문자열 포매팅 3.6버전 이후만 사용 가능

탐색기에서 \\602-00 -- 공유폴더

python 에서 오늘날짜, 빅텍스트(*로 표시) 출력하고 today.txt 파일 생성

구구단

2단 3단 4단
5단 6단 7단
8단 9단


===========================오후1===========================



ing..

폰트


===========================오후2===========================
구구단 가로출력
빅텍스트 