Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-08-20T11:41:43+09:00

====== Linux ======
Created 목요일 20 8월 2020

\n --- 윈도우 표준
%s --- 리눅스나 유닉스 공통
__window나 ubuntu 의 hosts 파일에서 127.0.0.1을 다른 dns로 사용을 하게되면 localhost로 접근시 문제가 생길 수 있다.__

Nginx에서 플라스크 연동시 [[/etc/nginx/sites-enabled]] 에서 __default 링크를 제거__해야 내가 원하는 flask 앱서버를 연동시킬 수있다.

버추얼박스로 데스크탑 버전 혹은 서버버전 우분투 설치시 __ssh를 설치__하여 putty로 접속을 할 수 있다
버추얼박스 설정 > 네트워크 > 고급 > 포트포워딩 
22번 80번 등을 열어두어야 putty 접속 가능!


sudo timedatectl set-timezone "Asia/Seoul"
- 도커나 서버 리눅스 설치시 타임존 설정이 usa기준이여서
한국시간으로 맞춰준다.

첫 설치할 때 root 권한은 비활성화 되서
접근할 수 있는 계정을 생성한다

하위폴더까지 적용하는 옵션 -R
$ chown -R [owner name]:[group name] [filename or directory]

vim 테마 지정 문서
vi ~/.vimrc

$ df -h === 파일 시스템현황

scp <파일경로> <계정>@<ip주소> === 해당 계정의 아이피주소로 간단한 파일들(ex : ssh-keygen) 전송

윈도우에서 vm 으로 웹서버 open시 윈도우 위의 가상머신에서 서버를 open한 것이므로 인터넷 미접속시에도 서로의 ip로 접속 할 수있다.

웹서버 기본포트 변경 참고사이트)https://www.bloger.kr/46

$ sudo netstat -tnlp === 포트 상태 확인
$ sudo ufw status === 우분투 방화벽의 상태를 체크
$ sudo ufw allow 8080 === 8080포트를 허용해줌

wsl2 설치하면 윈도우 폴더를 제어할 수있다
(기본적으로 서브 운영체제이기 때문에 c 와 e에 모든권한이있다.)

$ lsblk === 현재 리눅스의 파일 시스템 확인

# 블록 볼륨을 ext4로 포맷
$ sudo mkfs.ext4 -m 0 -E lazy_itable_init=0,lazy_journal_init=0,discard /dev/sdb

# Symlink 연결
$ sudo mkdir -p /mnt/disks/sdb
$ sudo mount -o discard,defaults /dev/sdb /mnt/disks/sdb
$ sudo chmod a+w /mnt/disks/sdb

# /etc/fstab 작성을 위한 HDD의 UUID 확인
$ sudo blkid /dev/sdb

$ vi vi /etc/fstab 

# sudo vi /etc/fstab 에 아래 내용 추가 (재 부팅 시 마운트)

UUID=UUID_VALUE /mnt/disks/sdb ext4 discard,defaults,nobootwait 0 2* _netdev
UUID="90000-0000-0000-90000000000" /mnt/disks/sdb ext4 discard,defaults,noatime,_netdev 0 2

$ sudo mount -all

tmux - 리눅스 창 생성하기
$ tmux
 ctrl + b // shift + 5 ==== 리눅스 창이 가로방향으로 생김 
 ctrl + b // shift + ' ==== 리눅스 창이 새로방향으로 생김
 ctrl + b // 방향키 ==== 방향키 방향으로 새로만든 리눅스창 이동

$ touch test{1..10} === touch는 파일을 생성시키고 test1~test10까지의 파일을 생성

rsync 동기화


cp -r <folder name> <복사경로> === 폴더 통째로 복사한다.
명령줄 행 지우기
ctrl + u
명령줄 단어 지우기
ctrl + w

$ !! == 직전에 입력한 명령어 재실행

터미널에서 jpg 파일 열기
$ xdg-open <filename>.jpg

터미널에서 api 설치 명령어
$ sudo apt-get install <filename>

$ wget -O <filename> <down받을경로>

$ pwd ======= 현재경로

$ cd ~ ======= 로그인된 사용자 폴더로 이동

$ nano <이름.txt> ====== 텍스트 파일 생성

$ cat <이름.txt> ===== 텍스트를 리눅스창에 띄움

$ grep <찾고싶은 단어> <이름.txt> === 텍스트안에 찾고싶은 단어 표시 

pipeline
$ ls --help | grep <단어> === ls의 문서에서 단어 표시

IO Redirection
Input, Output, 방향을 바꾼다.
$ ls -l > result.txt  ==== ls -l 의 실행내용을 텍스트파일로 저장 
'>'는 Standard Output을 Redirection 함
1> 는 standard output (1은 생략 가능, 화면에 출력)
2> (에러에대한 redirection)
$ rm result2.txt 2> error.log

$ head -n1 < 원본파일 > ex.txt === ex.txt에 원본파일의 첫줄을 전달한다.

linux - shell script (명령어 모음)

touch a.log ==== a.log 란 파일을 생성

nano backup

chmod +x backup == backup에게 실행기능을 추가한다.


background로 돌리는 명령어
ctrl + z  ==프로그램 실행중에 background로 돌림
jobs == 현재 background 에서 실행중인 프로그램
fg %2 ===  2번프로그램을 background에서 포워드그라운드로
kill -9 %2 === 보다 강력하게 2번프로그램을 종료시킴
ls -alR / > result.txt 2> error.log & ========= &를 추가하면 바로 
background에서 프로세스중...

사용자 추가
sudo useradd -m <사용자명>  == sudo 권한이 없음
사용자 암호업데이트
sudo passwd <사용자명> == 사용자에게 접속가능
추가된 사용자 sudo 권한 부여
sudo usermod -a -G sudo <사용자명>

권한 변경
참고사이트 - https://en.wikipedia.org/wiki/Chmod#Octal_modes or #Special_modes
access mod - user(=owner) group other 순서로 구성되있음
chmod o는 other
		 u는 owner
ex) chmod o+r <해당파일이나 폴더> === other 사용자에게 해당파일이나 폴더에 read권한을 줌
ex2) chomod u-w <해당파일이나 폴더> === owner 사용자에게 write 권한을 뺌

리눅스 기본 참고문서)
https://docs.google.com/presentation/d/1CrOcTTrRRHlredMRwie9WKSo7ChIF4bRylvUxhinRYU/edit#slide=id.g4834202c05_0_32
adduser <user> === user명으로 계정과 home에 디렉토리 생성
sudo -s  === root권한으로 로그인 (sudo 권한이있는 아이디어야만 명령이 동작)
passwd <user명> === user의 비밀 번호를 변경한다.

df === 하드 사용량.
df -m === 메가바이트 단위로 표시
du === 디렉토리 사용량
du [[/home]]
ps -ef ==== 실행되는 프로세스 목록

chmod 755 <dir or file> === dir 또는 file 의 읽기, 쓰기, 실행 권한을 바꿔준다. 이진수로 구성되어있어서 7이면 rwx 5면 r-x, 4, -w- 등등으로 설정할 수있다.
chown <user>:<user> <dir or file> === dir 또는 file의 소유주를 user 혹은 root로 설정 할 수 있다.


cp -af tt.sh [[/home/july2day/]] === 복사할 파일이 있을경우 -af 를 붙여주면 덮어쓰기를 한다.

ln -s 목적지 바로가기명 
ln -s /home/july2day/ttt ttt === 심볼릭 링크.. 경로를 ttt로 줄여준다.(윈도우의 바로가기 개념)

$ histroy ======== 사용된 명령어 리스트



	1  python --version
	2  python3 --version
	3  dir
	4  ls -al
	5  python3
	6  pwd
	7  cd ..
	8  pwd
	9  cd /
   10  cd /home
   11  cd /song
   12  pwd
   13  cd song
   14  pwd
   15  cd /
   16  ls
   17  ls -al
   18  cd /home
   19  ls
   20  ls -al
   21  cd ~
   22  cd
   23  pwd
   24  cd/
   25  cd /
   26  cd ~
   27  pwd
   28  cd /
   29  cd ~
   30  clear
   31  ls -al
   32  ls
   33  ls -l
   34  cd /e
   35  cd e
   36  dir
   37  echo create wsl2.. > wsl.txt
   38  dir
   39  ls -al
   40  ls
   41  ls -l
   42  python3 myweb.py
   43  echo hello > index.html
   44  python3 myweb.py
   45  histroy
   46  history
  225 touch a.log b.log c.log
  226  ls -l
  227  mkdir bak
  241  chmod +x backup
  259  ls /bin

