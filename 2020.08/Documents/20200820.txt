Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6

===========================오전1===========================

NCS 프로그래밍언어 (64p ~ 65p)

라이브러리 활용..

WSL2(Windows Subsystem for Linux)
설치
https://docs.microsoft.com/ko-kr/windows/wsl/install-win10
===========================오전2===========================

Python class 


===========================오전3===========================

wsl2 세팅
파이썬으로 http 서버 환경 구성
https://docs.python.org/3/library/http.server.html
===========================오전4===========================

리눅스 문서 확인

===========================오후1=========================== 

Java 

0.0 이나 0.0f 로 나누면 ArithmeticException이 발생하지 않고
/ 연산의 결과 Infinity 값, % 연산의 결과 [[NaN]] 을 가짐

Infinity
NaN(not a number)
예외처리하지 않으면 어디서 에러가 났는지 알 수 없음.
===========================오후2===========================

비교 연산자

이진 포맷의 기수를 사용하는 모든 부동소숫점 타입은 0.1을
정확히 표현할 수 없어서 0.1f는 0.1의 근사값으로 표현되어
 0.100000001490 처럼 표시
(해결책 - float 타입으로 강제 타입 변환 하거나 정수로 변환해서 비교)

String 타입
 == 으로 비교시에는 원하는 결과가 아닐수도 있다.
 값이 있는 주소를 저장하기 때문에 문자열만 비교하고 싶으면
equals()메소드를 사용에 원본과 비교 문자열을 비교한다.

논리연산자 

&&와 & 는 산출 결과가 같지만 &&는 앞의 피연산자가 false라면 바로 false 
&는 두 피연산자 모두 평가해서 산출 결과를 낸다. &보다 &&이 효율적

||, | 도 같다.

비트연산자 (94p ~
다시보기
===========================오후3===========================

대입연산자
 
삼항연산자

조건식 ? 값 또는 연산식 : 값 또는 연산식
(피연산자1) (피연산자2)    (피연산자3)


조건문

Math.random() 0 <= x < 1의 값을 반환
ex) 주사위 1 ~ 6 사이 숫자 뽑기
int num = (int)(Math.random() * 6) + 1;

ex) 로또번호 1 ~ 46사이 숫자 뽑기
int num = (int)(Math.random() * 45) + 1;

반복문

for문 작성시 부동소수점 타입을 사용하면 원하는 결과가 아닐 수 있다.
