Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-08-20T17:26:12+09:00

====== Java ======
Created 목요일 20 8월 2020

https://blog.jiktong.kr/
******면접단골질문객체지향, 싱글톤********
final static *********

byte
byte형은 정수 자료형 중에서도 가장 작은 범위를 가진 자료형이다. byte에는 8비트의 공간이 할당되며 256개의 숫자를 저장 할 수 있다. 이 256개의 숫자는 반으로 나뉘어 반은 음수를 나머지 반은 양수와 0을 표현한다.
범위는 -128 ~ 127







Java 클래스 (186p ~ 225p)

클래스는 두가지의 용도가 있다. 하나는 라이브러리(API)용이고
다른 하나는 실행용이다. 프로그램 전체에서 실행용 클래스는 단 하나이다.

생성자는 객체 생성시 단 한번만 실행된다.
===========================오후2===========================

필드와 변수의 차이
필드는 생성자와 모든 메소드에서 사용이 가능하다.
변수는 자신이 선언된 생성자 또는 메소드 블록 내부에서만 사용 할 수 있다.

이클립스를 사용하면 클래스에서 자동으로 생성자 생성할 수 있다
source ⇒ generate constructor using Fields...

오버로딩과 오버라이딩
예제)https://brunch.co.kr/@kimkm4726/2
생성자 오버로딩 - 다양한 매개변수를 넣기위해 생성자를 여러 개 선언하는 것.
===========================오후3===========================

다른 생성자 호출
this()를 사용해 중복코드를 제거, 반드시 생성자의 첫줄에서만 허용.
예제)https://crushonit.tistory.com/14


메소드

매개 변수의 수를 모를경우 매개변수를 배열타입으로 선언하거나 ...을 사용해서 선언한다.
ex)int sum1(int[] values){}
메소드를 호출하기전에 배열을 생성해야하는 불편함이있다.
ex)int sum2(int ... values){}
메소드 호출시 넘겨준 값의 수에 따라 자동으로 배열 생성

필드나 메소드는 인스턴스라 불리지만 
생성자는 그럴 수 없다. 
static 이 없으면 무조건 인스턴스

인스턴스 필드로 작업해야할 메소드 - > 인스턴스 메소드
인스턴스 필드로 작업하지않는 메소드 - > 정적 메소드

static final (상수)
객체마다 가지고 있지 않음
불변의 정적 필드
공용 데이터로 사용
상수 이름은 전부 대문자이고, 여러 단어이면 _로 연결

싱글톤  ************************
클래스 내부에서만든 단 하나의 객체이고, 클래스 외부에서 생성할 수 없도록
private 접근 제한자를 생성자에 붙여준다. 
자신의 타입인 정적필드를 하나 선언하고 객체를 생성해 초기화한다.
클래스 내부에서는 new 연산자로 생성자 호출이 가능!
정적필드도 private 을 붙여 외부에서 필드값을 변경하지 못하도록 막는다.
외부에서 호출할 수 있는 정적메소드 getInstance()를 선언해서 자신의 객체를 리턴해준다.

final 필드
객체마다 가지는 불변의 인스턴스 필드
초기값이 생성자에서 초기화되면, 수정 할 수 없다.

static final (상수)
객체마다 가지고 있지 않음
불변의 정적 필드
공용 데이터로 사용
상수 이름은 전부 대문자이고, 여러 단어이면 _로 연결
