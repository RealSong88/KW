1.
무인도 들어갔을때 실행되는것 자체가 play.py가 아닌 user or game에서 구현이 되어야함
-> 실제적으로 무인도값을 판별하는것은 화면단이 아니고, 주사위의 결과값은 user의 dice메서드에서 판별하기 때문. 화면단은 표시만 해줘야함!
-> return으로 result값을 받는것은 주사위를 화면에 표출하는 화면단의 표출을 위해서이지 식을 활용하기 위해서가 아님.

같은 요소로 폭풍의 경우도 user or game안에서 구성이 되어있어야함.
- 화면단과 기능단의 분리 필요!

--> 분리를 하지않으면 game 및 user클래스를 따로 만든 의미가 없어짐. - 클래스의 변수기능만 활용하고 메서드를 반만 사용하는 격
--> 협업시에 서로 소스 공유할때 지금은 짧아서 괜찮지만 길어질경우 이해가 힘들어질 수 있음. 
     해당 메서드만 봐야하는것이 아닌 화면단 전체를 봐야하는 경우가 생기기 때문.
     소스가 매우 더러워짐. 인수인계시 좋지 않음.

2.
무인도 들어가도 실제 유저의 land_idx의 값은 계속 변함. 무인도를 나갈때 임의적으로 5로 고정시키는 것. -> 오류사항

-> 가상 점 위치 이동시에 land_idx값을 따름,,
--> 무인도에서는 timer작동 안하게 해야함 즉, if문,,,,,,,,,,,,,,,
---> 1,2번 해당사항은 user or game 내부에서 돌게 만들었을경우 land_idx를 고정시킬수 있기 때문에 화면 별도의 timer기능에선 문제가 없어짐.

3.
 user 클래스와 game 클래스는 서로 상속관계가 아니기 때문에 각자의 클래스 안의 메서드에서 활용이 어려울수 있으나,
 편의를 위해 game클래스에서는 idx, user클래스에서는 game 객체 자체의 값을 가져오기 때문에 현재 만들어진 프로세스 상 각자의 메서드에서 서로 활용이 가능한 상태.

-> user 클래스, game 클래스에서 공통적으로 users_text 변수를 활용할 필요가 사라짐.
-> 같은 이름의 변수가 game 클래스에서도 있고, user 클래스에서도 있고 화면단에 넣는것도 왔다리갔다리 하니까 이해도가 떨어지게 됨.
-> 둘 중 하나를 메인으로 정해서 해야할 필요성이 있음.

4. 
user클래스에서 result -> self.result로 바꾼 이유..???????
-> 써먹는곳이 아무데도 없음
-> self.result 변수와 self.result_event, self.result_text와 혼동만 온다.

5.
game 클래스에서 land -> total_land 바꾼 이유

6. 
game 클래스에서 users[2]안에 a,b 유저 이름값을 넣었는데 넣은 이유 
->해당 값의 활용은 이미 가능한 상태에서 추가로 넣을 필요가 없어보임

7.
Game의 input_name 메서드에서 User 객체에 의미없는 생성자의 파라미터 x,y 값 넘겨주는 것 지운것은 매우 합당한 일.
-> 다만, Virtual 객체 생성시에 임의적으로 적용이 필요하므로 User클래스의 생성자에 따로 쓰는것보단, 넘겨주는 곳에 넣기위해 원복하겠음.

8.
만들어진대로 실행시 게임종료할때 가상좌표가 해당좌표까지 이동하는것을 타지않고 종료가 됨.
-> play.py의 dice메서드에서 life==0 비교하는것을 스레드 즉 가상좌표 이동 종료시로 이동.

9.
현재 무인도 도착시에 해당 유저의 주사위값이 main에 나오지않음.
-> 수정

10.
전 소스에서는 

(1) game.dice에서 주사위 굴림, land_idx를 추가시킴
(2) 화면에 이동한 값 이미지 표시
(3) 폭풍으로 이동시 1~17랜덤 숫자를 바로 land_idx에 적용
(4) 다음번 차례가 되어 주사위를 굴림, land_idx를 추가시킴
(5) 화면에 이동한 값 이미지 표시
-> 실제 이동하는 위치가 3번+4번으로 (폭풍에서 나온값+주사위)로 표시가 되는 오류사항이 있음.  
-> 폭풍을 1번 타지만 land_idx값은 2번의 변동이 오므로       
   지금은 가상이동이 추가되었으므로 화면단 구분여부가 더 필요함
ex) 기존 : 0 -> 5 + 2
     병합 : (0 -> 5    and  5 -> 2)  or ( 0 -> 5 + 2 )

--> 1,2번사항과 마찬가지로 dice메서드에 들어가지않아서 생기는일. - 해당 메서드 설계오류

----------------> 최대한 수정을 안하는대로 기존 방식을 유지하기 위해서, game_process 및 game_process2에서의 랜덤함수를 주석처리 하고, 
                     폭풍위치로 이동하는 가상이동시에만 랜덤함수가 작동( 스레드 메서드 ), 
                     다음 화면상에서도 (순간이동 값 + 주사위 좌표) 기존대로 실행되도록 수정



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

해당 고쳐야할 사항은 2.0 version 결합시에는 고치지않고, 최대한 있는그대로 if조건을 많이 넣어서라도 작동은 하게 만들어야함
소스 및 변수 정리시 같이 정리할 필요가 있음.
서로 만든것, 즉 협업이기때문에 내 개인의 판단으로 고치는것은 안됨. 



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


-> 깃허브 마스터 브런치로 2.0버전으로 올림